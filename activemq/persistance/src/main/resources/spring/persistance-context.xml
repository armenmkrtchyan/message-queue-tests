<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:jms="http://www.springframework.org/schema/jms"
       xmlns:camel="http://camel.apache.org/schema/spring"
       xsi:schemaLocation=" http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                            http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
                            http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms.xsd
                            http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">

    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="org.h2.Driver" />
        <!-- where the db will be placed (created automatically) -->
        <property name="url" value="jdbc:h2:/home/armen/IdeaProjects/message-queue-tests/activemq/persistance/src/main/resources" />
        <property name="username" value="sa" />
        <property name="password" value="" />
    </bean>

    <bean id="projectCostDao" class="com.synisys.test.messaging.dao.ProjectCostDao" parent="dao"/>

    <bean id="projectDao" class="com.synisys.test.messaging.dao.ProjectDao" parent="dao"/>

    <bean id="dao" abstract="true" class="com.synisys.test.messaging.dao.Dao">
        <constructor-arg ref="dataSource"/>
    </bean>

    <jdbc:initialize-database>
        <jdbc:script location="classpath:db/db-structure.sql"/>
        <jdbc:script location="classpath:db/db-data.sql"/>
        <jdbc:script location="classpath:db/db-sql-data-generated.sql"/>
    </jdbc:initialize-database>

    <camel:camelContext xmlns="http://camel.apache.org/schema/spring">
        <camel:route id="costLoad">
            <camel:from uri="jms:queue:projectCost.data.queue"/>
            <camel:bean ref="projectCostDao" method="loadCostsByProjectId"  />
        </camel:route>
        <camel:route id="costInsert">
            <camel:from uri="jms:queue:projectCost.insert.queue"/>
            <camel:bean ref="projectCostDao" method="insert"  />
        </camel:route>
        <camel:route id="projectCostTotal">
            <camel:from uri="jms:queue:projectCost.total.queue"/>
            <camel:bean ref="projectCostDao" method="loadProjectTotalCost"  />
        </camel:route>
        <camel:route id="portfolioLoad">
            <camel:from uri="jms:queue:portfolio.queue"/>
            <camel:to uri="bean:projectDao?method=loadPortfolioProjectsInRange(${body[from]},${body[to]})" />
        </camel:route>
        <camel:route id="projectsCount">
            <camel:from uri="jms:queue:project.count.queue"/>
            <camel:bean ref="projectDao" method="getProjectsCount" />
        </camel:route>
        <camel:route id="projectData">
            <camel:from uri="jms:queue:project.data.queue"/>
            <camel:bean ref="projectDao" method="loadProject" />
        </camel:route>
        <camel:route id="projectUpdate">
            <camel:from uri="jms:queue:project.update.queue"/>
            <camel:bean ref="projectDao" method="updateProject" />
        </camel:route>
    </camel:camelContext>

    <bean id="jms" class="org.apache.activemq.camel.component.ActiveMQComponent">
        <property name="brokerURL" value="tcp://localhost:61616"/>
    </bean>

</beans>